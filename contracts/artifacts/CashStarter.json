{
  "contractName": "CashStarter",
  "constructorInputs": [],
  "abi": [
    {
      "name": "pledge",
      "inputs": [
        {
          "name": "pledgeAmount",
          "type": "int"
        }
      ]
    },
    {
      "name": "externalFunction",
      "inputs": []
    }
  ],
  "bytecode": "OP_DUP OP_0 OP_NUMEQUAL OP_IF OP_INPUTINDEX OP_0 OP_NUMEQUALVERIFY OP_TXINPUTCOUNT OP_2 OP_NUMEQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_LESSTHANOREQUAL OP_VERIFY OP_OVER 1027 OP_GREATERTHANOREQUAL OP_VERIFY OP_OVER ffffffffffff00 OP_LESSTHAN OP_VERIFY OP_0 OP_UTXOTOKENCATEGORY f47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981 OP_2 OP_CAT OP_EQUALVERIFY OP_1 OP_UTXOVALUE e02e OP_GREATERTHANOREQUAL OP_VERIFY OP_1 OP_UTXOTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_0 OP_OUTPUTBYTECODE OP_0 OP_UTXOBYTECODE OP_EQUALVERIFY OP_0 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY OP_EQUALVERIFY OP_0 OP_OUTPUTVALUE OP_0 OP_UTXOVALUE OP_3 OP_PICK OP_ADD OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENAMOUNT OP_0 OP_UTXOTOKENAMOUNT OP_NUMEQUALVERIFY OP_0 OP_OUTPUTTOKENCOMMITMENT OP_0 OP_UTXOTOKENCOMMITMENT OP_EQUALVERIFY OP_1 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_1 OP_OUTPUTTOKENAMOUNT OP_0 OP_NUMEQUALVERIFY OP_1 OP_OUTPUTVALUE e803 OP_NUMEQUALVERIFY OP_1 OP_OUTPUTTOKENCATEGORY OP_0 OP_UTXOTOKENCATEGORY 20 OP_SPLIT OP_DROP OP_EQUALVERIFY OP_0 OP_UTXOTOKENCOMMITMENT 23 OP_SPLIT OP_NIP OP_DUP ffffffffff OP_EQUAL OP_NOT OP_VERIFY OP_1 OP_OUTPUTTOKENCOMMITMENT OP_3 OP_ROLL OP_6 OP_NUM2BIN OP_0 1d OP_NUM2BIN OP_CAT OP_ROT OP_CAT OP_EQUALVERIFY OP_TXOUTPUTCOUNT OP_3 OP_NUMEQUAL OP_IF OP_2 OP_OUTPUTBYTECODE OP_1 OP_UTXOBYTECODE OP_EQUALVERIFY OP_2 OP_OUTPUTTOKENCATEGORY OP_0 OP_EQUALVERIFY OP_ENDIF OP_DROP OP_1 OP_ELSE OP_1 OP_NUMEQUALVERIFY OP_INPUTINDEX OP_1 OP_NUMEQUALVERIFY OP_0 OP_UTXOTOKENCATEGORY f47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981 OP_2 OP_CAT OP_EQUAL OP_ENDIF",
  "source": "pragma cashscript ^0.10.0;\r\n\r\ncontract CashStarter() {\r\n    function pledge(int pledgeAmount) {\r\n        require(this.activeInputIndex == 0);\r\n        require(tx.inputs.length == 2);\r\n        require(tx.outputs.length <= 3);\r\n        require(pledgeAmount >= 10000);\r\n        require(pledgeAmount < 281474976710655);\r\n        require(tx.inputs[0].tokenCategory == 0xf47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981 + 0x02);\r\n        require(tx.inputs[1].value >= 12000);\r\n        require(tx.inputs[1].tokenCategory == 0x);\r\n\r\n        require(tx.outputs[0].lockingBytecode == tx.inputs[0].lockingBytecode);\r\n        require(tx.outputs[0].tokenCategory == tx.inputs[0].tokenCategory);          \r\n        require(tx.outputs[0].value == tx.inputs[0].value + pledgeAmount);     \r\n        require(tx.outputs[0].tokenAmount == tx.inputs[0].tokenAmount);             \r\n        require(tx.outputs[0].nftCommitment == tx.inputs[0].nftCommitment);\r\n\r\n        require(tx.outputs[1].lockingBytecode == tx.inputs[1].lockingBytecode);    \r\n        require(tx.outputs[1].tokenAmount == 0);\r\n        require(tx.outputs[1].value == 1000);\r\n        require(tx.outputs[1].tokenCategory == tx.inputs[0].tokenCategory.split(32)[0]);\r\n\r\n        bytes5 campaignID = bytes5(tx.inputs[0].nftCommitment.split(35)[1]);\r\n        require(campaignID != 0xFFFFFFFFFF);\r\n        require(tx.outputs[1].nftCommitment == bytes6(pledgeAmount) + bytes29(0) + campaignID);\r\n\r\n        if (tx.outputs.length == 3) {\r\n            require(tx.outputs[2].lockingBytecode == tx.inputs[1].lockingBytecode);\r\n            require(tx.outputs[2].tokenCategory == 0x);\r\n        }\r\n    }\r\n\r\n    function externalFunction() {\r\n        require(this.activeInputIndex == 1);\r\n        require(tx.inputs[0].tokenCategory == 0xf47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981 + 0x02);\r\n    }\r\n}\r\n",
  "debug": {
    "bytecode": "0079009c63c0009c69c3529c69c453a1695179021027a269517907ffffffffffff009f6900ce20f47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981527e876951c602e02ea26951ce00876900cd00c7876900d100ce876900cc00c65379939c6900d300d09c6900d200cf876951cd51c7876951d3009c6951cc02e8039c6951d100ce01207f75876900cf01237f77007905ffffffffff87916951d2537a568000011d807e527a7e8769c4539c6352cd51c7876952d100876968517767007a519c69c0519c6900ce20f47ee553b6f6df0c1b0ad32848f88c403a3433785d5cdd9c1fe071b69b373981527e8768",
    "sourceMap": "4:4:33:5;;;;;5:16:5:37;:41::42;:16:::1;:8::44;6:16:6:32:0;:36::37;:16:::1;:8::39;7:16:7:33:0;:37::38;:16:::1;:8::40;8:16:8:28:0;;:32::37;:16:::1;:8::39;9:16:9:28:0;;:31::46;:16:::1;:8::48;10:26:10:27:0;:16::42;:46::112;:115::119;:46:::1;:16;:8::121;11:26:11:27:0;:16::34;:38::43;:16:::1;:8::45;12:26:12:27:0;:16::42;:46::48;:16:::1;:8::50;14:27:14:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;15:27:15:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;16:27:16:28:0;:16::35;:49::50;:39::57;:60::72;;:39:::1;:16;:8::74;17:27:17:28:0;:16::41;:55::56;:45::69;:16:::1;:8::71;18:27:18:28:0;:16::43;:57::58;:47::73;:16:::1;:8::75;20:27:20:28:0;:16::45;:59::60;:49::77;:16:::1;:8::79;21:27:21:28:0;:16::41;:45::46;:16:::1;:8::48;22:27:22:28:0;:16::35;:39::43;:16:::1;:8::45;23:27:23:28:0;:16::43;:57::58;:47::73;:80::82;:47::83:1;:::86;:16;:8::88;25:45:25:46:0;:35::61;:68::70;:35::71:1;:::74;26:16:26:26:0;;:30::42;:16:::1;;:8::44;27:27:27:28:0;:16::43;:54::66;;:47::67:1;;:78::79:0;:70::80:1;;:47;:83::93:0;;:47:::1;:16;:8::95;29:12:29:29:0;:33::34;:12:::1;:36:32:9:0;30:31:30:32;:20::49;:63::64;:53::81;:20:::1;:12::83;31:31:31:32:0;:20::47;:51::53;:20:::1;:12::55;29:36:32:9;4:4:33:5;;;35::38::0;;;;;36:16:36:37;:41::42;:16:::1;:8::44;37:26:37:27:0;:16::42;:46::112;:115::119;:46:::1;:16;3:0:39:1",
    "logs": [],
    "requireMessages": []
  },
  "compiler": {
    "name": "cashc",
    "version": "0.10.0-next.5"
  },
  "updatedAt": "2024-06-03T22:45:37.424Z"
}